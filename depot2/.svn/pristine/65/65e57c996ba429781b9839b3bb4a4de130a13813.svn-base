/*
 * Copyright (c) 2005-2020 BeiJing Jidi Information Tech Co.,Ltd. All Rights Reserved.
 * This software is the confidential and proprietary information of
 * Founder. You shall not disclose such Confidential Information
 * and shall use it only in accordance with the terms of the agreements
 * you entered into with 北京极地信息安全安全有限公司.
 */
package com.ssi.depot.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.ssi.depot.dao.IProductInOutDAO;
import com.ssi.depot.entity.ProductInOut;
import com.ssi.depot.service.IProductInOutService;
import com.ssi.depot.util.PageUtil;

/** 
 * CopyRright (c)2005-2014:   <极地信息Jidi Information> 
 * Project:  depot2
 * Module ID: <(模块)类编号，可以引用系统设计中的类编号>
 * Comments:  <对此类的描述，可以引用系统设计中的描述>
 * JDK version used: <JDK1.6>                              
 * Namespace: package com.ssi.depot.service.impl;
 * Author：      林为 
 * Create Date： 2014年10月28日 上午10:12:52
 * Modified By：  林为 
 * Modified Date: 2014年10月28日 上午10:12:52
 * Why & What is modified:  <修改原因描述>    
 * Version: v1.0
 */
@Service("productInOutService")
@Transactional
public class ProductInOutServiceImpl implements IProductInOutService {

	@Autowired
	private IProductInOutDAO productInOutDao;
	private ProductInOut productInOut;
	private String msg = "";
	private boolean flag;
	private Map<String,Object> json;
	
	
	/** 
	 * 方  法 名: findProductInOutById
	 * 功能描述： 
	 * 输入参数: ProductInOutServiceImpl
	 * 返 回 值:  ProductInOutServiceImpl
	 * 异    常：      <按照异常名字的字母顺序> 
	 * 创 建 人:  林为
	 * 创建日期: 2014年10月28日 上午10:12:52
	 * 修 改 人:  Blue_Sky
	 * 修改日期: 2014年10月28日 上午10:12:52
	 */
	@Override
	public Map<String, Object> findProductInOutById(String pioid) {
		json = new HashMap<String, Object>();
		flag = false;
		ProductInOut pio = productInOutDao.selectProductInOutById(pioid);
		if(pio != null){
			flag = true;
			json.put("rows", pio);
			json.put("total", 1);
		}else{
			msg = "未找到ID为  " + pioid + " 的信息,请核实后查询！";
			json.put("msg", msg);
		}
		json.put("success", flag);
		return json;
	}

	/** 
	 * 方  法 名: addProductInOut
	 * 功能描述： 
	 * 输入参数: ProductInOutServiceImpl
	 * 返 回 值:  ProductInOutServiceImpl
	 * 异    常：      <按照异常名字的字母顺序> 
	 * 创 建 人:  林为
	 * 创建日期: 2014年10月28日 上午10:12:52
	 * 修 改 人:  Blue_Sky
	 * 修改日期: 2014年10月28日 上午10:12:52
	 */
	@Override
	public Map<String, Object> addProductInOut(ProductInOut productInOut) {
		json = new HashMap<String, Object>();
		flag = false;
		if(productInOutDao.insertProductInOut(productInOut) > 0){
			flag = true;
			msg ="添加成功！";
		}else{
			msg ="添加失败，请重试！";
		}
		json.put("success", flag);
		json.put("msg", msg);
		return json;
	}

	/** 
	 * 方  法 名: findProductInOutAll
	 * 功能描述： 
	 * 输入参数: ProductInOutServiceImpl
	 * 返 回 值:  ProductInOutServiceImpl
	 * 异    常：      <按照异常名字的字母顺序> 
	 * 创 建 人:  林为
	 * 创建日期: 2014年10月28日 上午10:12:52
	 * 修 改 人:  Blue_Sky
	 * 修改日期: 2014年10月28日 上午10:12:52
	 */
	@Override
	public Map<String, Object> findProductInOutAll() {
		json = new HashMap<String, Object>();
		flag = false;
		List<ProductInOut> productInOuts = productInOutDao.selectProductInOutAll();
		if(productInOuts != null){
			flag = true;
			json.put("rows", productInOuts);
			json.put("total", productInOuts.size());
		}else{
			msg ="查询失败，请重试！";
			json.put("msg", msg);
		}
		json.put("success", flag);
		return json;
	}

	/** 
	 * 方  法 名: findProductInOutPage
	 * 功能描述： 
	 * 输入参数: ProductInOutServiceImpl
	 * 返 回 值:  ProductInOutServiceImpl
	 * 异    常：      <按照异常名字的字母顺序> 
	 * 创 建 人:  林为
	 * 创建日期: 2014年10月28日 上午10:12:52
	 * 修 改 人:  Blue_Sky
	 * 修改日期: 2014年10月28日 上午10:12:52
	 */
	@Override
	public Map<String, Object> findProductInOutPage(Integer page,Integer start, Integer limit) {
		json = new HashMap<String, Object>();
		flag = false;
		List<ProductInOut> productInOuts = productInOutDao.selectProductInOutByPage(PageUtil.page(page, start, limit));
		if(productInOuts != null){
			flag = true;
			json.put("rows", productInOuts);
			json.put("total", productInOutDao.selectProductInOutAll().size());
		}else{
			msg ="查询失败，请重试！";
			json.put("msg", msg);
		}
		json.put("success", flag);
		return json;
	}

	
	/** 
	 * 方  法 名: updateProductInOut
	 * 功能描述： 
	 * 输入参数: ProductInOutServiceImpl
	 * 返 回 值:  ProductInOutServiceImpl
	 * 异    常：      <按照异常名字的字母顺序> 
	 * 创 建 人:  林为
	 * 创建日期: 2014年10月28日 上午10:12:52
	 * 修 改 人:  Blue_Sky
	 * 修改日期: 2014年10月28日 上午10:12:52
	 */
	@Override
	public Map<String, Object> updateProductInOut(ProductInOut productInOut) {
		json = new HashMap<String, Object>();
		flag = false;
		if(productInOutDao.updateProductInOut(productInOut) > 0){
			flag = true;
			msg = "修改成功！";
		}else{
			msg="修改失败！";
			json.put("msg", msg);
		}
		json.put("success", flag);
		return json;
	}
	/** 
	 * 方  法 名: deleteProductInOutById
	 * 功能描述： 
	 * 输入参数: ProductInOutServiceImpl
	 * 返 回 值:  ProductInOutServiceImpl
	 * 异    常：      <按照异常名字的字母顺序> 
	 * 创 建 人:  林为
	 * 创建日期: 2014年10月28日 上午10:12:52
	 * 修 改 人:  Blue_Sky
	 * 修改日期: 2014年10月28日 上午10:12:52
	 */
	@Override
	public Map<String, Object> deleteProductInOutById(String pioid) {
		json = new HashMap<String, Object>();
		flag = false;
		if(productInOutDao.delProductInOut(pioid) > 0){
			flag = true;
			msg = "删除成功！";
		}else{
			msg="删除失败！";
			json.put("msg", msg);
		}
		json.put("success", flag);
		return json;
	}

	
	
/******************   getter and setter   *********************/
	public IProductInOutDAO getProductInOutDao() {
		return productInOutDao;
	}

	public ProductInOut getProductInOut() {
		return productInOut;
	}

	public void setProductInOutDao(IProductInOutDAO productInOutDao) {
		this.productInOutDao = productInOutDao;
	}

	public void setProductInOut(ProductInOut productInOut) {
		this.productInOut = productInOut;
	}

}
